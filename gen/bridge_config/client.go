// Code generated by goa v3.11.0, DO NOT EDIT.
//
// bridgeConfig client
//
// Command:
// $ goa gen admin-panel/design

package bridgeconfig

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "bridgeConfig" service client.
type Client struct {
	BridgeCreateEndpoint goa.Endpoint
	BridgeListEndpoint   goa.Endpoint
	BridgeDeleteEndpoint goa.Endpoint
	BridgeTestEndpoint   goa.Endpoint
}

// NewClient initializes a "bridgeConfig" service client given the endpoints.
func NewClient(bridgeCreate, bridgeList, bridgeDelete, bridgeTest goa.Endpoint) *Client {
	return &Client{
		BridgeCreateEndpoint: bridgeCreate,
		BridgeListEndpoint:   bridgeList,
		BridgeDeleteEndpoint: bridgeDelete,
		BridgeTestEndpoint:   bridgeTest,
	}
}

// BridgeCreate calls the "bridgeCreate" endpoint of the "bridgeConfig" service.
func (c *Client) BridgeCreate(ctx context.Context, p *BridgeItem) (res *BridgeCreateResult, err error) {
	var ires interface{}
	ires, err = c.BridgeCreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BridgeCreateResult), nil
}

// BridgeList calls the "bridgeList" endpoint of the "bridgeConfig" service.
func (c *Client) BridgeList(ctx context.Context) (res *BridgeListResult, err error) {
	var ires interface{}
	ires, err = c.BridgeListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*BridgeListResult), nil
}

// BridgeDelete calls the "bridgeDelete" endpoint of the "bridgeConfig" service.
func (c *Client) BridgeDelete(ctx context.Context, p *DeleteBridgeFilter) (res *BridgeDeleteResult, err error) {
	var ires interface{}
	ires, err = c.BridgeDeleteEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BridgeDeleteResult), nil
}

// BridgeTest calls the "bridgeTest" endpoint of the "bridgeConfig" service.
func (c *Client) BridgeTest(ctx context.Context, p *BridgeTestPayload) (res *BridgeTestResult, err error) {
	var ires interface{}
	ires, err = c.BridgeTestEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BridgeTestResult), nil
}
