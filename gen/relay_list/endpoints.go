// Code generated by goa v3.11.0, DO NOT EDIT.
//
// relayList endpoints
//
// Command:
// $ goa gen admin-panel/design

package relaylist

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "relayList" service endpoints.
type Endpoints struct {
	ListRelay goa.Endpoint
}

// NewEndpoints wraps the methods of the "relayList" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListRelay: NewListRelayEndpoint(s),
	}
}

// Use applies the given middleware to all the "relayList" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListRelay = m(e.ListRelay)
}

// NewListRelayEndpoint returns an endpoint function that calls the method
// "listRelay" of service "relayList".
func NewListRelayEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ListRelay(ctx)
	}
}
