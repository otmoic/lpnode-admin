// Code generated by goa v3.11.0, DO NOT EDIT.
//
// hedge endpoints
//
// Command:
// $ goa gen admin-panel/design

package hedge

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "hedge" service endpoints.
type Endpoints struct {
	List goa.Endpoint
	Edit goa.Endpoint
	Del  goa.Endpoint
}

// NewEndpoints wraps the methods of the "hedge" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		List: NewListEndpoint(s),
		Edit: NewEditEndpoint(s),
		Del:  NewDelEndpoint(s),
	}
}

// Use applies the given middleware to all the "hedge" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.List = m(e.List)
	e.Edit = m(e.Edit)
	e.Del = m(e.Del)
}

// NewListEndpoint returns an endpoint function that calls the method "list" of
// service "hedge".
func NewListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.List(ctx)
	}
}

// NewEditEndpoint returns an endpoint function that calls the method "edit" of
// service "hedge".
func NewEditEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*EditPayload)
		return s.Edit(ctx, p)
	}
}

// NewDelEndpoint returns an endpoint function that calls the method "del" of
// service "hedge".
func NewDelEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*DelPayload)
		return s.Del(ctx, p)
	}
}
