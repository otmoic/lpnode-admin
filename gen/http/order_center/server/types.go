// Code generated by goa v3.11.0, DO NOT EDIT.
//
// orderCenter HTTP server types
//
// Command:
// $ goa gen admin-panel/design

package server

import (
	ordercenter "admin-panel/gen/order_center"
)

// ListRequestBody is the type of the "orderCenter" service "list" endpoint
// HTTP request body.
type ListRequestBody struct {
	Status   *int64 `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
	Page     *int64 `form:"page,omitempty" json:"page,omitempty" xml:"page,omitempty"`
	PageSize *int64 `form:"pageSize,omitempty" json:"pageSize,omitempty" xml:"pageSize,omitempty"`
}

// ListResponseBody is the type of the "orderCenter" service "list" endpoint
// HTTP response body.
type ListResponseBody struct {
	Code    *int64                            `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	Result  *OrderCenterRetResultResponseBody `form:"result,omitempty" json:"result,omitempty" xml:"result,omitempty"`
	Message *string                           `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// OrderCenterRetResultResponseBody is used to define fields on response body
// types.
type OrderCenterRetResultResponseBody struct {
	List      []interface{} `form:"list,omitempty" json:"list,omitempty" xml:"list,omitempty"`
	PageCount *int64        `form:"pageCount,omitempty" json:"pageCount,omitempty" xml:"pageCount,omitempty"`
}

// NewListResponseBody builds the HTTP response body from the result of the
// "list" endpoint of the "orderCenter" service.
func NewListResponseBody(res *ordercenter.ListResult) *ListResponseBody {
	body := &ListResponseBody{
		Code:    res.Code,
		Message: res.Message,
	}
	if res.Result != nil {
		body.Result = marshalOrdercenterOrderCenterRetResultToOrderCenterRetResultResponseBody(res.Result)
	}
	return body
}

// NewListPayload builds a orderCenter service list endpoint payload.
func NewListPayload(body *ListRequestBody) *ordercenter.ListPayload {
	v := &ordercenter.ListPayload{
		Status:   body.Status,
		Page:     body.Page,
		PageSize: body.PageSize,
	}

	return v
}
