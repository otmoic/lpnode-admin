// Code generated by goa v3.11.0, DO NOT EDIT.
//
// chainConfig client
//
// Command:
// $ goa gen admin-panel/design

package chainconfig

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "chainConfig" service client.
type Client struct {
	SetChainListEndpoint         goa.Endpoint
	DelChainListEndpoint         goa.Endpoint
	ChainListEndpoint            goa.Endpoint
	SetChainGasUsdEndpoint       goa.Endpoint
	SetChainClientConfigEndpoint goa.Endpoint
}

// NewClient initializes a "chainConfig" service client given the endpoints.
func NewClient(setChainList, delChainList, chainList, setChainGasUsd, setChainClientConfig goa.Endpoint) *Client {
	return &Client{
		SetChainListEndpoint:         setChainList,
		DelChainListEndpoint:         delChainList,
		ChainListEndpoint:            chainList,
		SetChainGasUsdEndpoint:       setChainGasUsd,
		SetChainClientConfigEndpoint: setChainClientConfig,
	}
}

// SetChainList calls the "setChainList" endpoint of the "chainConfig" service.
func (c *Client) SetChainList(ctx context.Context, p *SetChainListPayload) (res *SetChainListResult, err error) {
	var ires interface{}
	ires, err = c.SetChainListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SetChainListResult), nil
}

// DelChainList calls the "delChainList" endpoint of the "chainConfig" service.
func (c *Client) DelChainList(ctx context.Context, p *DelChainListPayload) (res *DelChainListResult, err error) {
	var ires interface{}
	ires, err = c.DelChainListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*DelChainListResult), nil
}

// ChainList calls the "chainList" endpoint of the "chainConfig" service.
func (c *Client) ChainList(ctx context.Context) (res *ChainListResult, err error) {
	var ires interface{}
	ires, err = c.ChainListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*ChainListResult), nil
}

// SetChainGasUsd calls the "setChainGasUsd" endpoint of the "chainConfig"
// service.
func (c *Client) SetChainGasUsd(ctx context.Context, p *SetChainGasUsdPayload) (res *SetChainGasUsdResult, err error) {
	var ires interface{}
	ires, err = c.SetChainGasUsdEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SetChainGasUsdResult), nil
}

// SetChainClientConfig calls the "setChainClientConfig" endpoint of the
// "chainConfig" service.
func (c *Client) SetChainClientConfig(ctx context.Context, p *SetChainClientConfigPayload) (res *SetChainClientConfigResult, err error) {
	var ires interface{}
	ires, err = c.SetChainClientConfigEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SetChainClientConfigResult), nil
}
