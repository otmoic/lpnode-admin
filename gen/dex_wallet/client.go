// Code generated by goa v3.11.0, DO NOT EDIT.
//
// dexWallet client
//
// Command:
// $ goa gen admin-panel/design

package dexwallet

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "dexWallet" service client.
type Client struct {
	ListDexWalletEndpoint   goa.Endpoint
	CreateDexWalletEndpoint goa.Endpoint
	DeleteDexWalletEndpoint goa.Endpoint
	VaultListEndpoint       goa.Endpoint
	UpdateLpWalletEndpoint  goa.Endpoint
}

// NewClient initializes a "dexWallet" service client given the endpoints.
func NewClient(listDexWallet, createDexWallet, deleteDexWallet, vaultList, updateLpWallet goa.Endpoint) *Client {
	return &Client{
		ListDexWalletEndpoint:   listDexWallet,
		CreateDexWalletEndpoint: createDexWallet,
		DeleteDexWalletEndpoint: deleteDexWallet,
		VaultListEndpoint:       vaultList,
		UpdateLpWalletEndpoint:  updateLpWallet,
	}
}

// ListDexWallet calls the "listDexWallet" endpoint of the "dexWallet" service.
func (c *Client) ListDexWallet(ctx context.Context) (res *ListDexWalletResult, err error) {
	var ires interface{}
	ires, err = c.ListDexWalletEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*ListDexWalletResult), nil
}

// CreateDexWallet calls the "createDexWallet" endpoint of the "dexWallet"
// service.
func (c *Client) CreateDexWallet(ctx context.Context, p *WalletRow) (res *CreateDexWalletResult, err error) {
	var ires interface{}
	ires, err = c.CreateDexWalletEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateDexWalletResult), nil
}

// DeleteDexWallet calls the "deleteDexWallet" endpoint of the "dexWallet"
// service.
func (c *Client) DeleteDexWallet(ctx context.Context, p *DeleteFilter) (res *DeleteDexWalletResult, err error) {
	var ires interface{}
	ires, err = c.DeleteDexWalletEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*DeleteDexWalletResult), nil
}

// VaultList calls the "vaultList" endpoint of the "dexWallet" service.
func (c *Client) VaultList(ctx context.Context) (res *VaultListResult, err error) {
	var ires interface{}
	ires, err = c.VaultListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*VaultListResult), nil
}

// UpdateLpWallet calls the "updateLpWallet" endpoint of the "dexWallet"
// service.
func (c *Client) UpdateLpWallet(ctx context.Context) (res *UpdateLpWalletResult, err error) {
	var ires interface{}
	ires, err = c.UpdateLpWalletEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*UpdateLpWalletResult), nil
}
