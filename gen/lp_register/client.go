// Code generated by goa v3.11.0, DO NOT EDIT.
//
// lpRegister client
//
// Command:
// $ goa gen admin-panel/design

package lpregister

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "lpRegister" service client.
type Client struct {
	RegisterAllEndpoint   goa.Endpoint
	UnRegisterAllEndpoint goa.Endpoint
}

// NewClient initializes a "lpRegister" service client given the endpoints.
func NewClient(registerAll, unRegisterAll goa.Endpoint) *Client {
	return &Client{
		RegisterAllEndpoint:   registerAll,
		UnRegisterAllEndpoint: unRegisterAll,
	}
}

// RegisterAll calls the "registerAll" endpoint of the "lpRegister" service.
func (c *Client) RegisterAll(ctx context.Context) (res *RegisterAllResult, err error) {
	var ires interface{}
	ires, err = c.RegisterAllEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*RegisterAllResult), nil
}

// UnRegisterAll calls the "unRegisterAll" endpoint of the "lpRegister" service.
func (c *Client) UnRegisterAll(ctx context.Context) (res *UnRegisterAllResult, err error) {
	var ires interface{}
	ires, err = c.UnRegisterAllEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*UnRegisterAllResult), nil
}
