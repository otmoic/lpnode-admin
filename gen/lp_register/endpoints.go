// Code generated by goa v3.11.0, DO NOT EDIT.
//
// lpRegister endpoints
//
// Command:
// $ goa gen admin-panel/design

package lpregister

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "lpRegister" service endpoints.
type Endpoints struct {
	RegisterAll   goa.Endpoint
	UnRegisterAll goa.Endpoint
}

// NewEndpoints wraps the methods of the "lpRegister" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		RegisterAll:   NewRegisterAllEndpoint(s),
		UnRegisterAll: NewUnRegisterAllEndpoint(s),
	}
}

// Use applies the given middleware to all the "lpRegister" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.RegisterAll = m(e.RegisterAll)
	e.UnRegisterAll = m(e.UnRegisterAll)
}

// NewRegisterAllEndpoint returns an endpoint function that calls the method
// "registerAll" of service "lpRegister".
func NewRegisterAllEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.RegisterAll(ctx)
	}
}

// NewUnRegisterAllEndpoint returns an endpoint function that calls the method
// "unRegisterAll" of service "lpRegister".
func NewUnRegisterAllEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.UnRegisterAll(ctx)
	}
}
