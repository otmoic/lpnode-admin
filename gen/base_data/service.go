// Code generated by goa v3.11.0, DO NOT EDIT.
//
// baseData service
//
// Command:
// $ goa gen admin-panel/design

package basedata

import (
	"context"
)

// used to manage basic data
type Service interface {
	// used to return basic chain data
	ChainDataList(context.Context) (res *ChainDataListResult, err error)
	// used to return basic chain data
	GetLpInfo(context.Context) (res *GetLpInfoResult, err error)
	// used to return runtime environment
	RunTimeEnv(context.Context) (res *RunTimeEnvResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "baseData"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"chainDataList", "getLpInfo", "runTimeEnv"}

type ChainDataItem struct {
	// chain id in the database
	ID *string
	// chain Id
	ChainID *int64
	// chain name
	Name *string
	// full chain name
	ChainName *string
	// token name
	TokenName *string
}

// ChainDataListResult is the result type of the baseData service chainDataList
// method.
type ChainDataListResult struct {
	Code *int64
	// list
	Result  []*ChainDataItem
	Message *string
}

// GetLpInfoResult is the result type of the baseData service getLpInfo method.
type GetLpInfoResult struct {
	Code    *int64
	Result  *LpInfo
	Message *string
}

type LpInfo struct {
	Name    *string
	Profile *string
}

// RunTimeEnvResult is the result type of the baseData service runTimeEnv
// method.
type RunTimeEnvResult struct {
	Code *int64
	// list
	Result  *string
	Message *string
}
