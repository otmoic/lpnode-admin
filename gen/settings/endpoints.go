// Code generated by goa v3.11.0, DO NOT EDIT.
//
// settings endpoints
//
// Command:
// $ goa gen admin-panel/design

package settings

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "settings" service endpoints.
type Endpoints struct {
	Settings goa.Endpoint
}

// NewEndpoints wraps the methods of the "settings" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Settings: NewSettingsEndpoint(s),
	}
}

// Use applies the given middleware to all the "settings" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Settings = m(e.Settings)
}

// NewSettingsEndpoint returns an endpoint function that calls the method
// "settings" of service "settings".
func NewSettingsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*SettingsPayload)
		return s.Settings(ctx, p)
	}
}
