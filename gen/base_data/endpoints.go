// Code generated by goa v3.11.0, DO NOT EDIT.
//
// baseData endpoints
//
// Command:
// $ goa gen admin-panel/design

package basedata

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "baseData" service endpoints.
type Endpoints struct {
	ChainDataList goa.Endpoint
}

// NewEndpoints wraps the methods of the "baseData" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ChainDataList: NewChainDataListEndpoint(s),
	}
}

// Use applies the given middleware to all the "baseData" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ChainDataList = m(e.ChainDataList)
}

// NewChainDataListEndpoint returns an endpoint function that calls the method
// "chainDataList" of service "baseData".
func NewChainDataListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ChainDataList(ctx)
	}
}
