// Code generated by goa v3.11.0, DO NOT EDIT.
//
// hedge HTTP server types
//
// Command:
// $ goa gen admin-panel/design

package server

import (
	hedge "admin-panel/gen/hedge"
)

// EditRequestBody is the type of the "hedge" service "edit" endpoint HTTP
// request body.
type EditRequestBody struct {
	Hedge *HedgeItemRequestBody `form:"hedge,omitempty" json:"hedge,omitempty" xml:"hedge,omitempty"`
}

// DelRequestBody is the type of the "hedge" service "del" endpoint HTTP
// request body.
type DelRequestBody struct {
	// 删除的主键Id
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListResponseBody is the type of the "hedge" service "list" endpoint HTTP
// response body.
type ListResponseBody struct {
	Code *int64 `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// 添加成功的链
	Data    []*HedgeItemResponseBody `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	Message *string                  `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// EditResponseBody is the type of the "hedge" service "edit" endpoint HTTP
// response body.
type EditResponseBody struct {
	Code *int64 `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// 添加成功的链
	Data    *int64  `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// DelResponseBody is the type of the "hedge" service "del" endpoint HTTP
// response body.
type DelResponseBody struct {
	Code *int64 `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// 是否成功删除
	Data    *int64  `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// HedgeItemResponseBody is used to define fields on response body types.
type HedgeItemResponseBody struct {
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	HedgeType *string `form:"hedgeType,omitempty" json:"hedgeType,omitempty" xml:"hedgeType,omitempty"`
}

// HedgeItemRequestBody is used to define fields on request body types.
type HedgeItemRequestBody struct {
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	HedgeType *string `form:"hedgeType,omitempty" json:"hedgeType,omitempty" xml:"hedgeType,omitempty"`
}

// NewListResponseBody builds the HTTP response body from the result of the
// "list" endpoint of the "hedge" service.
func NewListResponseBody(res *hedge.ListResult) *ListResponseBody {
	body := &ListResponseBody{
		Code:    res.Code,
		Message: res.Message,
	}
	if res.Data != nil {
		body.Data = make([]*HedgeItemResponseBody, len(res.Data))
		for i, val := range res.Data {
			body.Data[i] = marshalHedgeHedgeItemToHedgeItemResponseBody(val)
		}
	}
	return body
}

// NewEditResponseBody builds the HTTP response body from the result of the
// "edit" endpoint of the "hedge" service.
func NewEditResponseBody(res *hedge.EditResult) *EditResponseBody {
	body := &EditResponseBody{
		Code:    res.Code,
		Data:    res.Data,
		Message: res.Message,
	}
	return body
}

// NewDelResponseBody builds the HTTP response body from the result of the
// "del" endpoint of the "hedge" service.
func NewDelResponseBody(res *hedge.DelResult) *DelResponseBody {
	body := &DelResponseBody{
		Code:    res.Code,
		Data:    res.Data,
		Message: res.Message,
	}
	return body
}

// NewEditPayload builds a hedge service edit endpoint payload.
func NewEditPayload(body *EditRequestBody) *hedge.EditPayload {
	v := &hedge.EditPayload{}
	if body.Hedge != nil {
		v.Hedge = unmarshalHedgeItemRequestBodyToHedgeHedgeItem(body.Hedge)
	}

	return v
}

// NewDelPayload builds a hedge service del endpoint payload.
func NewDelPayload(body *DelRequestBody) *hedge.DelPayload {
	v := &hedge.DelPayload{
		ID: body.ID,
	}

	return v
}
