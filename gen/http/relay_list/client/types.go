// Code generated by goa v3.11.0, DO NOT EDIT.
//
// relayList HTTP client types
//
// Command:
// $ goa gen admin-panel/design

package client

import (
	relaylist "admin-panel/gen/relay_list"

	goa "goa.design/goa/v3/pkg"
)

// ListRelayResponseBody is the type of the "relayList" service "listRelay"
// endpoint HTTP response body.
type ListRelayResponseBody struct {
	Code    *int64                            `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	Result  []*RelayListRelayItemResponseBody `form:"result,omitempty" json:"result,omitempty" xml:"result,omitempty"`
	Message *string                           `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// RelayListRelayItemResponseBody is used to define fields on response body
// types.
type RelayListRelayItemResponseBody struct {
	ID           *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name         *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Profile      *string `form:"profile,omitempty" json:"profile,omitempty" xml:"profile,omitempty"`
	LpIDFake     *string `form:"lpIdFake,omitempty" json:"lpIdFake,omitempty" xml:"lpIdFake,omitempty"`
	LpNodeAPIKey *string `form:"lpNodeApiKey,omitempty" json:"lpNodeApiKey,omitempty" xml:"lpNodeApiKey,omitempty"`
	RelayAPIKey  *string `form:"relayApiKey,omitempty" json:"relayApiKey,omitempty" xml:"relayApiKey,omitempty"`
	RelayURI     *string `form:"relayUri,omitempty" json:"relayUri,omitempty" xml:"relayUri,omitempty"`
}

// NewListRelayResultOK builds a "relayList" service "listRelay" endpoint
// result from a HTTP "OK" response.
func NewListRelayResultOK(body *ListRelayResponseBody) *relaylist.ListRelayResult {
	v := &relaylist.ListRelayResult{
		Code:    *body.Code,
		Message: body.Message,
	}
	if body.Result != nil {
		v.Result = make([]*relaylist.RelayListRelayItem, len(body.Result))
		for i, val := range body.Result {
			v.Result[i] = unmarshalRelayListRelayItemResponseBodyToRelaylistRelayListRelayItem(val)
		}
	}

	return v
}

// ValidateListRelayResponseBody runs the validations defined on
// ListRelayResponseBody
func ValidateListRelayResponseBody(body *ListRelayResponseBody) (err error) {
	if body.Code == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("code", "body"))
	}
	return
}
