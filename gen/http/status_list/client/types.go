// Code generated by goa v3.11.0, DO NOT EDIT.
//
// statusList HTTP client types
//
// Command:
// $ goa gen admin-panel/design

package client

import (
	statuslist "admin-panel/gen/status_list"
)

// StatListResponseBody is the type of the "statusList" service "statList"
// endpoint HTTP response body.
type StatListResponseBody struct {
	Code    *int64                        `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	Result  []*StatusListItemResponseBody `form:"result,omitempty" json:"result,omitempty" xml:"result,omitempty"`
	Message *string                       `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// StatusListItemResponseBody is used to define fields on response body types.
type StatusListItemResponseBody struct {
	InstallType *string `form:"installType,omitempty" json:"installType,omitempty" xml:"installType,omitempty"`
	StatusKey   *string `form:"statusKey,omitempty" json:"statusKey,omitempty" xml:"statusKey,omitempty"`
	StatusBody  *string `form:"statusBody,omitempty" json:"statusBody,omitempty" xml:"statusBody,omitempty"`
	Name        *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	ErrMessage  *string `form:"errMessage,omitempty" json:"errMessage,omitempty" xml:"errMessage,omitempty"`
}

// NewStatListResultOK builds a "statusList" service "statList" endpoint result
// from a HTTP "OK" response.
func NewStatListResultOK(body *StatListResponseBody) *statuslist.StatListResult {
	v := &statuslist.StatListResult{
		Code:    body.Code,
		Message: body.Message,
	}
	if body.Result != nil {
		v.Result = make([]*statuslist.StatusListItem, len(body.Result))
		for i, val := range body.Result {
			v.Result[i] = unmarshalStatusListItemResponseBodyToStatuslistStatusListItem(val)
		}
	}

	return v
}
