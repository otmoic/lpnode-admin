// Code generated by goa v3.11.0, DO NOT EDIT.
//
// relayAccount endpoints
//
// Command:
// $ goa gen admin-panel/design

package relayaccount

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "relayAccount" service endpoints.
type Endpoints struct {
	ListAccount     goa.Endpoint
	RegisterAccount goa.Endpoint
	DeleteAccount   goa.Endpoint
}

// NewEndpoints wraps the methods of the "relayAccount" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListAccount:     NewListAccountEndpoint(s),
		RegisterAccount: NewRegisterAccountEndpoint(s),
		DeleteAccount:   NewDeleteAccountEndpoint(s),
	}
}

// Use applies the given middleware to all the "relayAccount" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListAccount = m(e.ListAccount)
	e.RegisterAccount = m(e.RegisterAccount)
	e.DeleteAccount = m(e.DeleteAccount)
}

// NewListAccountEndpoint returns an endpoint function that calls the method
// "listAccount" of service "relayAccount".
func NewListAccountEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ListAccount(ctx)
	}
}

// NewRegisterAccountEndpoint returns an endpoint function that calls the
// method "registerAccount" of service "relayAccount".
func NewRegisterAccountEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RegisterAccountPayload)
		return s.RegisterAccount(ctx, p)
	}
}

// NewDeleteAccountEndpoint returns an endpoint function that calls the method
// "deleteAccount" of service "relayAccount".
func NewDeleteAccountEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*DeleteAccountPayload)
		return s.DeleteAccount(ctx, p)
	}
}
